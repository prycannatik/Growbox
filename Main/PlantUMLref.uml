@startuml
!theme vibrant

start

:Serial.begin(9600);
:initializePins();
:digitalWrite(PUMP_WATER_PIN, HIGH);
if (lcd.begin()) then (true)
  :lcd.print("Growbox V1.0");
endif
:lcd.setCursor(0, 1);
:lcd.print("Bitte warten...");
:delay(1000);

while (true) is (true)
  :regulateLight();
  :checkPumpState();
  :updatePh();
  :updateEc();
  :delay(1000);
endwhile
stop

partition initializePins {
  start
  :Setze Pins als OUTPUT oder INPUT_PULLUP;
  stop
}

partition regulateLight {
  start
  if (Lichtzustand soll geändert werden) then (true)
    :Wechsle Lichtzustand;
    :Aktualisiere lightChangeMillis;
  endif
  stop
}

partition checkPumpState {
  start
  :Lese PUMP_BUTTON_PIN;
  :Aktualisiere currentPumpState;
  :Zeige Pumpenstatus an;
  stop
}

partition updatePh {
  start
  :calibratePhIfRequested();
  :Lese und berechne aktuellen pH-Wert;
  if (Bedingungen für Säurepumpe erfüllt) then (true)
    :Aktiviere PUMP_ACID_PIN;
    :Warte 3 Sekunden;
    :Deaktiviere PUMP_ACID_PIN;
    :Aktualisiere lastAcidPumpMillis;
  endif
  stop
}

partition calibratePhIfRequested {
  start
  if (Kalibrierungsanforderung detektiert) then (true)
    :Führe Kalibrierung durch;
    :Zeige neuen Offset an;
  endif
  stop
}

partition updateEc {
  start
  :Lese und berechne aktuellen EC-Wert;
  if (Bedingungen für Düngerpumpe erfüllt) then (true)
    :Aktiviere PUMP_DUNGER_PIN;
    :Warte 5 Sekunden;
    :Deaktiviere PUMP_DUNGER_PIN;
    :Aktualisiere lastDungerPumpMillis;
  endif
  stop
}

@enduml
